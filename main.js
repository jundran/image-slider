(()=>{"use strict";var n={771:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  background: #222;\n  color: #fff;\n}\n\nsection {\n  width: calc(min(100vw, 804px));\n  height: calc(min(100vh, calc(450px + 76px)));\n}\n\n.slider {\n  display: flex;\n  height: calc(100vw / 16 * 9);\n  max-height: calc(100% - 76px);\n  border: 2px solid;\n  position: relative;\n  overflow: hidden;\n}\n\n.slide {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  z-index: -1;\n  transition: transform 400ms ease-in-out;\n}\n\n.slide.visible {\n  transform: translateX(0);\n}\n\n.slide.left {\n  transform: translateX(-100%);\n}\n\n.slide.right {\n  transform: translateX(100%);\n}\n\nimg {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  display: block;\n}\n\nbutton {\n  cursor: pointer;\n  border-radius: 50%;\n}\n\n.left-button, .right-button {\n  position: absolute;\n  top: calc(50% - 20px);\n  width: 32px;\n  height: 32px;\n  margin: 0 8px;\n  cursor: pointer;\n  background: grey;\n  color: inherit;\n  border: 1px solid;\n  font-size: 1rem;\n  font-weight: 900;\n  opacity: .5;\n}\n\n.left-button:hover, .right-button:hover {\n  opacity: 1;\n}\n\n.right-button {\n  right: 0;\n}\n\n.left-button {\n  left: 0;\n}\n\n.image-selectors {\n  width: fit-content;\n  margin: auto;\n}\n\n.image-selectors button {\n  margin: 16px;\n  padding: 12px;\n  border: none;\n}\n\n.selected {\n  background: blue\n}\n\n.image-selectors p {\n  margin: 0;\n  font-size: .9rem;\n  text-align: center;\n}\n","",{version:3,sources:["webpack://./src/styles/index.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,SAAS;EACT,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,8BAA8B;EAC9B,4CAA4C;AAC9C;;AAEA;EACE,aAAa;EACb,4BAA4B;EAC5B,6BAA6B;EAC7B,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,MAAM;EACN,WAAW;EACX,uCAAuC;AACzC;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,cAAc;EACd,iBAAiB;EACjB,eAAe;EACf,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,YAAY;AACd;;AAEA;EACE;AACF;;AAEA;EACE,SAAS;EACT,gBAAgB;EAChB,kBAAkB;AACpB",sourcesContent:["body {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  margin: 0;\n  background: #222;\n  color: #fff;\n}\n\nsection {\n  width: calc(min(100vw, 804px));\n  height: calc(min(100vh, calc(450px + 76px)));\n}\n\n.slider {\n  display: flex;\n  height: calc(100vw / 16 * 9);\n  max-height: calc(100% - 76px);\n  border: 2px solid;\n  position: relative;\n  overflow: hidden;\n}\n\n.slide {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  z-index: -1;\n  transition: transform 400ms ease-in-out;\n}\n\n.slide.visible {\n  transform: translateX(0);\n}\n\n.slide.left {\n  transform: translateX(-100%);\n}\n\n.slide.right {\n  transform: translateX(100%);\n}\n\nimg {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  display: block;\n}\n\nbutton {\n  cursor: pointer;\n  border-radius: 50%;\n}\n\n.left-button, .right-button {\n  position: absolute;\n  top: calc(50% - 20px);\n  width: 32px;\n  height: 32px;\n  margin: 0 8px;\n  cursor: pointer;\n  background: grey;\n  color: inherit;\n  border: 1px solid;\n  font-size: 1rem;\n  font-weight: 900;\n  opacity: .5;\n}\n\n.left-button:hover, .right-button:hover {\n  opacity: 1;\n}\n\n.right-button {\n  right: 0;\n}\n\n.left-button {\n  left: 0;\n}\n\n.image-selectors {\n  width: fit-content;\n  margin: auto;\n}\n\n.image-selectors button {\n  margin: 16px;\n  padding: 12px;\n  border: none;\n}\n\n.selected {\n  background: blue\n}\n\n.image-selectors p {\n  margin: 0;\n  font-size: .9rem;\n  text-align: center;\n}\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],l=r.base?s[0]+r.base:s[0],A=i[l]||0,u="".concat(l," ").concat(A);i[l]=A+1;var d=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=t.p+"321222dfe9e25005d839.png",e=t.p+"067db145eebf333bec80.png",r=t.p+"7f7a5258db8baa972984.png",o=t.p+"d6ca8acac5bb7459f45a.png",i=t.p+"e323e2d19fdc862a7387.webp";var a=t(379),c=t.n(a),s=t(795),l=t.n(s),A=t(569),u=t.n(A),d=t(565),p=t.n(d),f=t(216),g=t.n(f),m=t(589),h=t.n(m),E=t(771),b={};b.styleTagTransform=h(),b.setAttributes=p(),b.insert=u().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=g(),c()(E.Z,b),E.Z&&E.Z.locals&&E.Z.locals;const v=[n,e,r,o,i];let C=0,B=window.setInterval(y,2e3);function y(n){document.querySelector(".slide.left").remove(),document.querySelector(".slide.visible").className="slide left",document.querySelector(".slide.right").className="slide visible",++C===v.length&&(C=0),document.querySelector(".slider").append(w(v[x()],"right")),k(C),n&&T()}function x(n){return n?0===C?v.length-1:C-1:C===v.length-1?0:C+1}function w(n,e){const t=document.createElement("div");t.className="slide",e?t.classList.add(e):t.classList.add("visible");const r=document.createElement("img");return r.src=n,t.append(r),t}function S(n){C!==parseInt(n.target.id)&&(C=parseInt(n.target.id),document.querySelector(".slide.visible img").src=v[C],document.querySelector(".slide.left img").src=v[x(!0)],document.querySelector(".slide.right img").src=v[x()],k(C),T())}function k(n){document.querySelectorAll(".image-selectors button").forEach((n=>n.classList.remove("selected"))),document.getElementById(n).classList.add("selected")}function q(n){if("BUTTON"!==n.target.tagName){if(B)return T();y(),B=window.setInterval(y,2e3)}}function T(){clearInterval(B),B=null}!function(){const n=document.querySelector(".slider");n.append(w(v[x(!0)],"left")),n.append(w(v[C])),n.append(w(v[x()],"right")),document.querySelector(".left-button").onclick=()=>(document.querySelector(".slide.right").remove(),document.querySelector(".slide.visible").className="slide right",document.querySelector(".slide.left").className="slide visible",--C<0&&(C=v.length-1),document.querySelector(".slider").insertBefore(w(v[x(!0)],"left"),document.querySelector(".slide.visible")),k(C),void T()),document.querySelector(".right-button").onclick=()=>y(!0),n.onclick=q;const e=document.querySelector(".image-selectors");e.innerHTML=`\n    ${v.map(((n,e)=>`<button id=${e}></button>`)).join("")}\n    <p>Click image to toggle slide show</p>\n  `,e.querySelectorAll("button").forEach((n=>n.onclick=S))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,